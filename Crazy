--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.4) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v68=0;local v69;while true do if (v68==0) then v69=v2(v0(v30,16));if v19 then local v96=v5(v69,v19);v19=nil;return v96;else return v69;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v70=(v31/((1 + (1 -0))^(v32-(2 -1))))%(((8 -3) -3)^(((v33-1) -(v32-((351 -(87 + 263)) -(180 -(67 + 113))))) + 1 + 0)) ;return v70-(v70%((2 + 0) -1)) ;else local v71=(1576 -(892 + 65)) -(555 + (152 -88)) ;local v72;while true do if (v71==(931 -(857 + 74))) then v72=(8 -6)^(v32-(569 -((900 -533) + 201))) ;return (((v31%(v72 + v72))>=v72) and (928 -(214 + 713))) or (0 + 0) ;end end end end local function v21() local v34=0 + 0 ;local v35;while true do if (v34==(3 -2)) then return v35;end if (v34==(952 -(802 + (272 -122)))) then v35=v1(v16,v18,v18);v18=v18 + ((2 + 0) -1) ;v34=1;end end end local function v22() local v36,v37=v1(v16,v18,v18 + 2 );v18=v18 + (999 -(915 + 82)) ;return (v37 * (724 -468)) + v36 ;end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + 2 + 1 );v18=v18 + 4 ;return (v41 * (22064430 -5287214)) + (v40 * (66723 -(1069 + 118))) + (v39 * 256) + v38 ;end local function v24() local v42=0 -0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(1 -0)) then v45=1 + 0 ;v46=(v20(v44,1 -0 ,20 + 0 ) * ((793 -(368 + 423))^(100 -68))) + v43 ;v42=(905 -(261 + 624)) -(4 + 6 + 8) ;end if (v42==(11 -8)) then if (v47==(0 -0)) then if (v46==(442 -(416 + 26))) then return v48 * ((1747 -(760 + 987)) -0) ;else local v97=0;while true do if (v97==(0 + 0)) then v47=(1914 -(1789 + 124)) -0 ;v45=438 -(145 + 293) ;break;end end end elseif (v47==2047) then return ((v46==(430 -(44 + 386))) and (v48 * ((1 -0)/(1080 -(1020 + 60))))) or (v48 * NaN) ;end return v8(v48,v47-(2509 -((2421 -(630 + 793)) + (1254 -(745 + 21)))) ) * (v45 + (v46/((1 + 0 + 1)^((145 -102) + 9)))) ;end if (v42==(772 -(201 + 571))) then v43=v23();v44=v23();v42=(3133 -1994) -(116 + 1022) ;end if (v42==(8 -6)) then v47=v20(v44,13 + 8 ,113 -82 );v48=((v20(v44,113 -81 )==(860 -(814 + 45))) and  -(2 -1)) or (1 + (0 -0)) ;v42=2 + 1 ;end end end local function v25(v49) local v50=0 -0 ;local v51;local v52;while true do if (v50==(7 -5)) then v52={};for v76=1 + 0 , #v51 do v52[v76]=v2(v1(v3(v51,v76,v76)));end v50=8 -5 ;end if (v50==(0 + 0)) then v51=nil;if  not v49 then v49=v23();if (v49==(1055 -(87 + 968))) then return "";end end v50=1;end if (v50==(4 -1)) then return v6(v52);end if (v50==((4 -2) -1)) then v51=v3(v16,v18,(v18 + v49) -(4 -3) );v18=v18 + v49 ;v50=2 + (14 -(9 + 5)) ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=0;local v54;local v55;local v56;local v57;local v58;local v59;local v60;while true do if ((8 -5)==v53) then v60=nil;while true do local v78=0 + 0 ;while true do if (v78==(1146 -(466 + 679))) then if ((0 -0)==v54) then local v102=0;while true do if (v102~=(0 -0)) then else v55={};v56={};v102=1901 -(106 + 1794) ;end if (v102==1) then v57={};v54=1;break;end end end if (v54==2) then for v106=1 + 0 ,v59 do local v107=0 + 0 ;local v108;local v109;local v110;local v111;local v112;while true do if (v107==(5 -3)) then v112=nil;while true do if (v108==0) then local v124=0 -0 ;while true do if (1~=v124) then else v108=1;break;end if (v124==0) then v109=0;v110=nil;v124=1;end end end if (v108~=(115 -(4 + 110))) then else local v125=0;while true do if (v125==0) then v111=nil;v112=nil;v125=585 -(57 + 527) ;end if ((1428 -(41 + 1386))==v125) then v108=2;break;end end end if (v108==(105 -(17 + 86))) then while true do if (v109~=(0 + 0)) then else local v230=0 -0 ;while true do if (v230~=(0 -0)) then else local v400=166 -(122 + 44) ;while true do if (v400==(0 -0)) then v110=0 -0 ;v111=nil;v400=1 + 0 ;end if (v400~=1) then else v230=1;break;end end end if (v230==1) then v109=1;break;end end end if (v109==1) then v112=nil;while true do if (v110==(0 + 0)) then local v401=0;local v402;local v403;while true do if (v401~=1) then else while true do if (v402==(0 -0)) then v403=0;while true do if (v403==(66 -(30 + 35))) then v110=1;break;end if (v403~=(0 + 0)) then else v111=v21();v112=nil;v403=1258 -(1043 + 214) ;end end break;end end break;end if (v401~=(0 -0)) then else v402=1212 -(323 + 889) ;v403=nil;v401=1;end end end if (v110==(2 -1)) then if (v111==1) then v112=v21()~=(580 -(361 + 219)) ;elseif (v111==2) then v112=v24();elseif (v111~=(323 -(53 + 267))) then else v112=v25();end v60[v106]=v112;break;end end break;end end break;end end break;end if (v107~=(1 + 0)) then else v110=nil;v111=nil;v107=2;end if (v107==0) then v108=0;v109=nil;v107=1;end end end v58[3]=v21();for v113=1,v23() do local v114=413 -(15 + 398) ;local v115;while true do if (0==v114) then v115=v21();if (v20(v115,983 -(18 + 964) ,1)~=(0 -0)) then else local v119=0 + 0 ;local v120;local v121;local v122;local v123;while true do if (v119~=(2 + 0)) then else while true do if (1==v120) then local v362=0;while true do if ((851 -(20 + 830))==v362) then v120=2;break;end if (v362~=0) then else local v453=0 + 0 ;while true do if (v453==(127 -(116 + 10))) then v362=1;break;end if (0==v453) then v123={v22(),v22(),nil,nil};if (v121==(0 -0)) then local v481=0 + 0 ;local v482;while true do if (v481~=(0 + 0)) then else v482=0 + 0 ;while true do if (v482==0) then v123[3]=v22();v123[10 -6 ]=v22();break;end end break;end end elseif (v121==1) then v123[3]=v23();elseif (v121==2) then v123[3]=v23() -((4 -2)^(1567 -(1126 + 425))) ;elseif (v121==(408 -(118 + 287))) then local v494=0 -0 ;local v495;local v496;while true do if (0==v494) then local v497=0;while true do if (v497==0) then v495=1121 -(118 + 1003) ;v496=nil;v497=1;end if (v497==(2 -1)) then v494=378 -(142 + 235) ;break;end end end if (v494~=(4 -3)) then else while true do if (v495==0) then v496=0;while true do if ((0 + 0)==v496) then v123[980 -(553 + 424) ]=v23() -((3 -1)^16) ;v123[4 + 0 ]=v22();break;end end break;end end break;end end end v453=1 + 0 ;end end end end end if ((2 + 0)==v120) then local v363=0 + 0 ;local v364;while true do if (v363==(0 + 0)) then v364=0 -0 ;while true do if (v364==0) then if (v20(v122,2 -1 ,2 -1 )~=1) then else v123[2]=v60[v123[1 + 1 ]];end if (v20(v122,2,9 -7 )==1) then v123[756 -(239 + 514) ]=v60[v123[3]];end v364=1;end if (v364==1) then v120=3;break;end end break;end end end if (v120==(0 + 0)) then local v365=1329 -(797 + 532) ;local v366;while true do if ((0 + 0)==v365) then v366=0 + 0 ;while true do if (v366~=(2 -1)) then else v120=1203 -(373 + 829) ;break;end if (v366==(731 -(476 + 255))) then local v475=0;while true do if (v475==(1130 -(369 + 761))) then v121=v20(v115,2 + 0 ,5 -2 );v122=v20(v115,7 -3 ,6);v475=1;end if (v475~=1) then else v366=1;break;end end end end break;end end end if (v120==(241 -(64 + 174))) then if (v20(v122,3,3)==(1 + 0)) then v123[5 -1 ]=v60[v123[4]];end v55[v113]=v123;break;end end break;end if (v119~=0) then else local v204=0;while true do if (v204~=(336 -(144 + 192))) then else v120=216 -(42 + 174) ;v121=nil;v204=1 + 0 ;end if (1~=v204) then else v119=1 + 0 ;break;end end end if (v119==1) then local v205=0;while true do if (v205==(1 + 0)) then v119=2;break;end if (v205==(1504 -(363 + 1141))) then v122=nil;v123=nil;v205=1581 -(1183 + 397) ;end end end end end break;end end end v54=3;end break;end if (v78~=(0 -0)) then else if (v54==1) then local v104=0 + 0 ;while true do if (v104==0) then local v116=0;while true do if (0==v116) then v58={v55,v56,nil,v57};v59=v23();v116=1976 -(1913 + 62) ;end if ((1 + 0)==v116) then v104=1;break;end end end if (v104==1) then v60={};v54=2;break;end end end if (v54==(7 -4)) then local v105=0;while true do if (v105==(1933 -(565 + 1368))) then for v117=3 -2 ,v23() do v56[v117-1 ]=v28();end return v58;end end end v78=1;end end end break;end if (v53==(1662 -(1477 + 184))) then v56=nil;v57=nil;v53=2;end if (v53~=0) then else v54=0 -0 ;v55=nil;v53=1;end if (v53~=2) then else v58=nil;v59=nil;v53=3;end end end local function v29(v61,v62,v63) local v64=0;local v65;local v66;local v67;while true do if (v64==1) then v67=v61[3];return function(...) local v79=v65;local v80=v66;local v81=v67;local v82=v27;local v83=1;local v84= -1;local v85={};local v86={...};local v87=v12("#",...) -1 ;local v88={};local v89={};for v93=0,v87 do if (v93>=v81) then v85[v93-v81 ]=v86[v93 + 1 ];else v89[v93]=v86[v93 + 1 ];end end local v90=(v87-v81) + 1 ;local v91;local v92;while true do v91=v79[v83];v92=v91[1];if (v92<=44) then if (v92<=21) then if (v92<=10) then if (v92<=4) then if (v92<=1) then if (v92==0) then local v126=v91[2];v89[v126](v89[v126 + 1 ]);else v89[v91[2]]=v62[v91[3]];end elseif (v92<=2) then local v129=0;local v130;local v131;while true do if (v129==0) then v130=v91[2];v131={};v129=1;end if (v129==1) then for v368=1, #v88 do local v369=0;local v370;while true do if (v369==0) then v370=v88[v368];for v467=0, #v370 do local v468=v370[v467];local v469=v468[1];local v470=v468[2];if ((v469==v89) and (v470>=v130)) then local v476=0;while true do if (v476==0) then v131[v470]=v469[v470];v468[1]=v131;break;end end end end break;end end end break;end end elseif (v92>3) then local v231=v91[2];do return v13(v89,v231,v84);end else do return;end end elseif (v92<=7) then if (v92<=5) then local v132=v91[2];local v133,v134=v82(v89[v132]());v84=(v134 + v132) -1 ;local v135=0;for v206=v132,v84 do local v207=0;while true do if (v207==0) then v135=v135 + 1 ;v89[v206]=v133[v135];break;end end end elseif (v92>6) then v89[v91[2]]=v63[v91[3]];else v89[v91[2]]=v91[3];end elseif (v92<=8) then local v136=v91[2];local v137,v138=v82(v89[v136](v89[v136 + 1 ]));v84=(v138 + v136) -1 ;local v139=0;for v208=v136,v84 do v139=v139 + 1 ;v89[v208]=v137[v139];end elseif (v92==9) then local v236=0;local v237;while true do if (v236==0) then v237=v91[2];v89[v237]=v89[v237]();break;end end else v63[v91[3]]=v89[v91[2]];end elseif (v92<=15) then if (v92<=12) then if (v92>11) then v89[v91[2]]= #v89[v91[3]];else local v141=v91[2];local v142=v89[v141 + 2 ];local v143=v89[v141] + v142 ;v89[v141]=v143;if (v142>0) then if (v143<=v89[v141 + 1 ]) then local v373=0;while true do if (v373==0) then v83=v91[3];v89[v141 + 3 ]=v143;break;end end end elseif (v143>=v89[v141 + 1 ]) then v83=v91[3];v89[v141 + 3 ]=v143;end end elseif (v92<=13) then v89[v91[2]]();elseif (v92>14) then v89[v91[2]]=v89[v91[3]][v89[v91[4]]];else v89[v91[2]]=v89[v91[3]][v91[4]];end elseif (v92<=18) then if (v92<=16) then local v145=0;local v146;local v147;local v148;local v149;while true do if (v145==1) then v84=(v148 + v146) -1 ;v149=0;v145=2;end if (0==v145) then v146=v91[2];v147,v148=v82(v89[v146](v13(v89,v146 + 1 ,v91[3])));v145=1;end if (2==v145) then for v376=v146,v84 do local v377=0;while true do if (v377==0) then v149=v149 + 1 ;v89[v376]=v147[v149];break;end end end break;end end elseif (v92==17) then if (v91[2]<v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end else v89[v91[2]]=v62[v91[3]];end elseif (v92<=19) then local v150=0;local v151;while true do if (v150==0) then v151=v91[2];v89[v151]=v89[v151]();break;end end elseif (v92>20) then local v246=v91[2];do return v13(v89,v246,v84);end elseif  not v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=32) then if (v92<=26) then if (v92<=23) then if (v92==22) then if (v89[v91[2]]==v91[4]) then v83=v83 + 1 ;else v83=v91[3];end elseif v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=24) then local v152=0;local v153;local v154;local v155;while true do if (v152==0) then v153=v91[2];v154={v89[v153](v89[v153 + 1 ])};v152=1;end if (v152==1) then v155=0;for v380=v153,v91[4] do v155=v155 + 1 ;v89[v380]=v154[v155];end break;end end elseif (v92>25) then v89[v91[2]]= #v89[v91[3]];else v83=v91[3];end elseif (v92<=29) then if (v92<=27) then v89[v91[2]]=v63[v91[3]];elseif (v92==28) then if (v89[v91[2]]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end else local v251=0;local v252;while true do if (v251==0) then v252=v91[2];do return v13(v89,v252,v252 + v91[3] );end break;end end end elseif (v92<=30) then local v158=v91[2];v89[v158]=v89[v158](v13(v89,v158 + 1 ,v91[3]));elseif (v92>31) then local v253=0;local v254;while true do if (v253==0) then v254=v91[2];v89[v254](v13(v89,v254 + 1 ,v91[3]));break;end end else local v255=v91[2];local v256=v91[4];local v257=v255 + 2 ;local v258={v89[v255](v89[v255 + 1 ],v89[v257])};for v336=1,v256 do v89[v257 + v336 ]=v258[v336];end local v259=v258[1];if v259 then local v384=0;while true do if (v384==0) then v89[v257]=v259;v83=v91[3];break;end end else v83=v83 + 1 ;end end elseif (v92<=38) then if (v92<=35) then if (v92<=33) then local v160=v91[3];local v161=v89[v160];for v211=v160 + 1 ,v91[4] do v161=v161   .. v89[v211] ;end v89[v91[2]]=v161;elseif (v92==34) then local v260=v91[2];local v261=v89[v260];local v262=v89[v260 + 2 ];if (v262>0) then if (v261>v89[v260 + 1 ]) then v83=v91[3];else v89[v260 + 3 ]=v261;end elseif (v261<v89[v260 + 1 ]) then v83=v91[3];else v89[v260 + 3 ]=v261;end else local v263=0;local v264;local v265;local v266;local v267;while true do if (v263==0) then v264=v91[2];v265,v266=v82(v89[v264](v13(v89,v264 + 1 ,v91[3])));v263=1;end if (v263==2) then for v434=v264,v84 do local v435=0;while true do if (v435==0) then v267=v267 + 1 ;v89[v434]=v265[v267];break;end end end break;end if (1==v263) then v84=(v266 + v264) -1 ;v267=0;v263=2;end end end elseif (v92<=36) then local v163=v91[3];local v164=v89[v163];for v212=v163 + 1 ,v91[4] do v164=v164   .. v89[v212] ;end v89[v91[2]]=v164;elseif (v92==37) then if (v91[2]<v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end else do return;end end elseif (v92<=41) then if (v92<=39) then v89[v91[2]]=v89[v91[3]];elseif (v92>40) then local v268=v91[2];v89[v268]=v89[v268](v13(v89,v268 + 1 ,v91[3]));else local v270=0;local v271;while true do if (v270==0) then v271=v91[2];v89[v271](v13(v89,v271 + 1 ,v91[3]));break;end end end elseif (v92<=42) then if  not v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v92==43) then if v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end else local v273=0;local v274;local v275;while true do if (1==v273) then v89[v274 + 1 ]=v275;v89[v274]=v275[v91[4]];break;end if (v273==0) then v274=v91[2];v275=v89[v91[3]];v273=1;end end end elseif (v92<=67) then if (v92<=55) then if (v92<=49) then if (v92<=46) then if (v92==45) then local v168=0;local v169;local v170;local v171;while true do if (v168==1) then v171=v89[v169] + v170 ;v89[v169]=v171;v168=2;end if (v168==2) then if (v170>0) then if (v171<=v89[v169 + 1 ]) then local v461=0;while true do if (v461==0) then v83=v91[3];v89[v169 + 3 ]=v171;break;end end end elseif (v171>=v89[v169 + 1 ]) then v83=v91[3];v89[v169 + 3 ]=v171;end break;end if (v168==0) then v169=v91[2];v170=v89[v169 + 2 ];v168=1;end end else v89[v91[2]]();end elseif (v92<=47) then local v172=v91[2];local v173={};for v213=1, #v88 do local v214=0;local v215;while true do if (v214==0) then v215=v88[v213];for v416=0, #v215 do local v417=v215[v416];local v418=v417[1];local v419=v417[2];if ((v418==v89) and (v419>=v172)) then v173[v419]=v418[v419];v417[1]=v173;end end break;end end end elseif (v92==48) then for v342=v91[2],v91[3] do v89[v342]=nil;end else v89[v91[2]]={};end elseif (v92<=52) then if (v92<=50) then local v174=v91[2];v89[v174]=v89[v174](v13(v89,v174 + 1 ,v84));elseif (v92>51) then v89[v91[2]]=v89[v91[3]][v89[v91[4]]];else local v279=v91[2];local v280,v281=v82(v89[v279](v89[v279 + 1 ]));v84=(v281 + v279) -1 ;local v282=0;for v344=v279,v84 do v282=v282 + 1 ;v89[v344]=v280[v282];end end elseif (v92<=53) then do return v89[v91[2]];end elseif (v92==54) then local v283=0;local v284;while true do if (v283==0) then v284=v91[2];v89[v284](v89[v284 + 1 ]);break;end end else local v285=v91[2];v89[v285]=v89[v285](v89[v285 + 1 ]);end elseif (v92<=61) then if (v92<=58) then if (v92<=56) then local v176=0;local v177;local v178;local v179;while true do if (v176==0) then v177=v91[2];v178={v89[v177](v13(v89,v177 + 1 ,v84))};v176=1;end if (v176==1) then v179=0;for v388=v177,v91[4] do v179=v179 + 1 ;v89[v388]=v178[v179];end break;end end elseif (v92>57) then if (v91[2]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end else local v287=v91[2];local v288=v89[v91[3]];v89[v287 + 1 ]=v288;v89[v287]=v288[v91[4]];end elseif (v92<=59) then v89[v91[2]]=v29(v80[v91[3]],nil,v63);elseif (v92==60) then v89[v91[2]][v89[v91[3]]]=v91[4];elseif (v89[v91[2]]==v91[4]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=64) then if (v92<=62) then v89[v91[2]]=v89[v91[3]];elseif (v92>63) then local v294=0;local v295;while true do if (v294==0) then v295=v91[2];do return v89[v295](v13(v89,v295 + 1 ,v91[3]));end break;end end else local v296=v91[2];local v297=v89[v296];local v298=v89[v296 + 2 ];if (v298>0) then if (v297>v89[v296 + 1 ]) then v83=v91[3];else v89[v296 + 3 ]=v297;end elseif (v297<v89[v296 + 1 ]) then v83=v91[3];else v89[v296 + 3 ]=v297;end end elseif (v92<=65) then v89[v91[2]]=v29(v80[v91[3]],nil,v63);elseif (v92>66) then if (v91[2]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end else local v299=v91[2];local v300={v89[v299](v89[v299 + 1 ])};local v301=0;for v348=v299,v91[4] do v301=v301 + 1 ;v89[v348]=v300[v301];end end elseif (v92<=78) then if (v92<=72) then if (v92<=69) then if (v92==68) then local v184=v91[2];v89[v184]=v89[v184](v89[v184 + 1 ]);else local v186=0;local v187;while true do if (0==v186) then v187=v91[2];do return v89[v187](v13(v89,v187 + 1 ,v91[3]));end break;end end end elseif (v92<=70) then local v188=v91[2];local v189,v190=v82(v89[v188]());v84=(v190 + v188) -1 ;local v191=0;for v216=v188,v84 do local v217=0;while true do if (0==v217) then v191=v191 + 1 ;v89[v216]=v189[v191];break;end end end elseif (v92==71) then for v352=v91[2],v91[3] do v89[v352]=nil;end else v62[v91[3]]=v89[v91[2]];end elseif (v92<=75) then if (v92<=73) then local v192=v80[v91[3]];local v193;local v194={};v193=v10({},{__index=function(v218,v219) local v220=0;local v221;while true do if (v220==0) then v221=v194[v219];return v221[1][v221[2]];end end end,__newindex=function(v222,v223,v224) local v225=v194[v223];v225[1][v225[2]]=v224;end});for v227=1,v91[4] do v83=v83 + 1 ;local v228=v79[v83];if (v228[1]==62) then v194[v227-1 ]={v89,v228[3]};else v194[v227-1 ]={v62,v228[3]};end v88[ #v88 + 1 ]=v194;end v89[v91[2]]=v29(v192,v193,v63);elseif (v92>74) then local v304=0;local v305;local v306;local v307;while true do if (v304==2) then for v440=1,v91[4] do local v441=0;local v442;while true do if (v441==0) then v83=v83 + 1 ;v442=v79[v83];v441=1;end if (v441==1) then if (v442[1]==62) then v307[v440-1 ]={v89,v442[3]};else v307[v440-1 ]={v62,v442[3]};end v88[ #v88 + 1 ]=v307;break;end end end v89[v91[2]]=v29(v305,v306,v63);break;end if (v304==0) then v305=v80[v91[3]];v306=nil;v304=1;end if (v304==1) then v307={};v306=v10({},{__index=function(v443,v444) local v445=v307[v444];return v445[1][v445[2]];end,__newindex=function(v446,v447,v448) local v449=v307[v447];v449[1][v449[2]]=v448;end});v304=2;end end else v63[v91[3]]=v89[v91[2]];end elseif (v92<=76) then local v196=0;local v197;while true do if (v196==0) then v197=v89[v91[4]];if  not v197 then v83=v83 + 1 ;else v89[v91[2]]=v197;v83=v91[3];end break;end end elseif (v92==77) then local v310=0;local v311;while true do if (0==v310) then v311=v91[2];v89[v311]=v89[v311](v13(v89,v311 + 1 ,v84));break;end end else v83=v91[3];end elseif (v92<=84) then if (v92<=81) then if (v92<=79) then local v198=v89[v91[4]];if  not v198 then v83=v83 + 1 ;else v89[v91[2]]=v198;v83=v91[3];end elseif (v92==80) then local v315=v91[2];local v316={v89[v315](v13(v89,v315 + 1 ,v84))};local v317=0;for v357=v315,v91[4] do local v358=0;while true do if (v358==0) then v317=v317 + 1 ;v89[v357]=v316[v317];break;end end end else v89[v91[2]][v91[3]]=v89[v91[4]];end elseif (v92<=82) then v89[v91[2]]={};elseif (v92>83) then do return v89[v91[2]];end else v62[v91[3]]=v89[v91[2]];end elseif (v92<=87) then if (v92<=85) then v89[v91[2]]=v91[3];elseif (v92>86) then local v322=v91[2];local v323=v91[4];local v324=v322 + 2 ;local v325={v89[v322](v89[v322 + 1 ],v89[v324])};for v359=1,v323 do v89[v324 + v359 ]=v325[v359];end local v326=v325[1];if v326 then v89[v324]=v326;v83=v91[3];else v83=v83 + 1 ;end elseif (v89[v91[2]]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=88) then v89[v91[2]][v89[v91[3]]]=v91[4];elseif (v92>89) then v89[v91[2]][v91[3]]=v89[v91[4]];else v89[v91[2]]=v89[v91[3]][v91[4]];end v83=v83 + 1 ;end end;end if (0==v64) then v65=v61[1];v66=v61[2];v64=1;end end end return v29(v28(),{},v17)(...);end return vv9(),...);
